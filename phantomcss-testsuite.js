// Generated by CoffeeScript 1.10.0
(function() {
  var login, phantomcss;

  phantomcss = require('../../sievo.ppm/node_modules/phantomcss');

  login = require('./sievo.login');

  casper.test.begin('Budgeting visual tests', function(test) {
    phantomcss.init({
      libraryRoot: '../../sievo.ppm/node_modules/phantomcss',
      screenshotRoot: fs.absolute(fs.workingDirectory + '/screenshots'),
      failedComparisonsRoot: fs.absolute(fs.workingDirectory + '/failures')
    });
    casper.on('remote.message', function(msg) {
      return this.echo(msg);
    });
    casper.on('error', function(err) {
      return this.die('PhantomJS has errored: ' + err);
    });
    casper.on('resource.error', function(err) {
      return casper.log('Resource load error: ' + err, 'warning');
    });
    casper.then(function() {
      casper.click('a[href$=Budgeting]');
      return casper.waitForText('Manage budgets', (function() {
        return phantomcss.screenshot('.budgetFrames', 'budget frames');
      }), function() {
        return casper.test.fail('should see budget frames');
      });
    });
    casper.then(function() {
      casper.click('#label-year-2016 a');
      return casper.waitForText('New budget round', (function() {
        return phantomcss.screenshot('#new-budgetround-panel', 'new budget round panel');
      }), function() {
        return casper.test.fail('should see new budget round panel');
      });
    });
    casper.then(function() {
      return phantomcss.compareAll();
    });

    /*
    Casper runs tests
     */
    return casper.run(function() {
      console.log('\nTHE END.');
      return casper.test.done();
    });
  });

}).call(this);
